{% set version = "1.35.1" %}

package:
  name: talisman
  version: {{ version }}

source:
  url: https://github.com/thoughtworks/talisman/archive/refs/tags/v{{ version }}.tar.gz
  sha256: bdf7be9943cea535f81e463a60464f7a5bbad2c08fe7096e9cd71a00bb8cfc48

build:
  number: 0
  script:
    - mkdir -p gopath/bin  # [unix]
    - export GOPATH=$(pwd)/gopath  # [unix]
    - go build -o ${PREFIX}/bin/talisman -ldflags="-s -w -X main.Version={{ version }}" talisman/cmd  # [unix]
    - go build -o %PREFIX%\Library\bin\talisman.exe -ldflags="-s -w -X main.Version={{ version }}" talisman\cmd  # [win]
    - go-licenses save talisman/cmd --save_path=./license-files

requirements:
  build:
    # https://github.com/thoughtworks/talisman/blob/main/go.mod
    - {{ compiler('go') }} 1.23
    - go-licenses

test:
  commands:
    - talisman --version

about:
  home: https://thoughtworks.github.io/talisman/
  summary: Talisman searches for files that look suspicious — such as tokens, passwords, and private keys.
  description: |
    Talisman is a tool that installs a hook to your repository to ensure that potential
    secrets or sensitive information do not leave the developer’s workstation. It validates
    the outgoing changeset for things that look suspicious - such as potential SSH keys,
    authorization tokens, private keys etc. Talisman can also be used as a repository
    history scanner to detect secrets that have already been checked in, so that you can
    take an informed decision to safeguard secrets.
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - license-files/
  doc_url: https://thoughtworks.github.io/talisman/docs
  dev_url: https://github.com/thoughtworks/talisman

extra:
  feedstock-name: talisman
  recipe-maintainers:
    - carterbox
